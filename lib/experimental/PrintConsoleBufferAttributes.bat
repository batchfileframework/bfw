@echo off

:PrintConsoleBufferAttributes
set "PrintConsoleBufferAttributes_Handle=%~1"
if not defined PrintConsoleBufferAttributes_Handle for /f "tokens=1" %%a in ('powershell -command "Add-Type -TypeDefinition 'using System; using System.Runtime.InteropServices; public class ConsoleAPI { [DllImport(\"kernel32.dll\", SetLastError=true)] public static extern IntPtr GetStdHandle(int nStdHandle); }'; $STD_OUTPUT_HANDLE=-11; Write-Host ([ConsoleAPI]::GetStdHandle($STD_OUTPUT_HANDLE))"') do ( set "PrintConsoleBufferAttributes_Handle=%%a" ) 
REM echo PrintConsoleBufferAttributes_Handle = %PrintConsoleBufferAttributes_Handle% 
powershell -command "Add-Type -TypeDefinition 'using System; using System.Runtime.InteropServices; public class ConsoleAPI { [StructLayout(LayoutKind.Sequential)] public struct COORD { public short X; public short Y; } [StructLayout(LayoutKind.Sequential)] public struct SMALL_RECT { public short Left; public short Top; public short Right; public short Bottom; } [StructLayout(LayoutKind.Sequential)] public struct CONSOLE_SCREEN_BUFFER_INFO { public COORD dwSize; public COORD dwCursorPosition; public ushort wAttributes; public SMALL_RECT srWindow; public COORD dwMaximumWindowSize; } [DllImport(\"kernel32.dll\", SetLastError=true)] public static extern bool GetConsoleScreenBufferInfo(IntPtr hConsoleOutput, out CONSOLE_SCREEN_BUFFER_INFO lpConsoleScreenBufferInfo); }'; $bufferHandle = %PrintConsoleBufferAttributes_Handle% ; $info = New-Object ConsoleAPI+CONSOLE_SCREEN_BUFFER_INFO; if ([ConsoleAPI]::GetConsoleScreenBufferInfo($bufferHandle, [ref]$info)) { Write-Host 'Size.x=' $info.dwSize.X; Write-Host 'Size.y=' $info.dwSize.Y; Write-Host 'CursorPosition.x=' $info.dwCursorPosition.X; Write-Host 'CursorPosition.y=' $info.dwCursorPosition.Y; Write-Host 'Attributes=' $info.wAttributes; Write-Host 'Window.Left=' $info.srWindow.Left; Write-Host 'Window.Top=' $info.srWindow.Top; Write-Host 'Window.Right=' $info.srWindow.Right; Write-Host 'Window.Bottom=' $info.srWindow.Bottom; Write-Host 'MaximumWindowSize.x=' $info.dwMaximumWindowSize.X; Write-Host 'MaximumWindowSize.y=' $info.dwMaximumWindowSize.Y; } else { Write-Host 'Failed to get console screen buffer info.'; }"
set "PrintConsoleBufferAttributes_Handle="
GoTo :EOF
